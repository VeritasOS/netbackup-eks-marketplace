AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation template that creates EFS File System and Volumes.
Parameters:
  ClusterName:
    Type: String
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Specify security groups for your EFS.
  Subnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: Select a subnet from the virtual network.
  PrimaryCatalogSize:
    Type: String
    Default: "500"
    Description: Provide the size for Primary server catalog. The catalog volume must be at least 100 Gi.
  ClusterSecurityGroup:
    Type: String
  InstanceName:
    Type: String

Resources:
  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    DeletionPolicy: Retain
    Properties:
      PerformanceMode: generalPurpose
      ProvisionedThroughputInMibps: 256
      ThroughputMode: provisioned
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: !Sub ${InstanceName}-primary-file-system

  PrimaryEFSMountTarget:
    Type: AWS::EFS::MountTarget
    DeletionPolicy: Retain
    DependsOn:
      - EFSFileSystem
    Properties: 
      FileSystemId: !Ref EFSFileSystem
      SecurityGroups: 
        - !Ref SecurityGroup
        - !Ref ClusterSecurityGroup
      SubnetId: !Ref Subnet2Id
  
  SnapshotManagerEFSFileSystem:
    Type: AWS::EFS::FileSystem
    DeletionPolicy: Retain
    Properties:
      PerformanceMode: generalPurpose
      ProvisionedThroughputInMibps: 256
      ThroughputMode: provisioned
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: !Sub ${InstanceName}-snapshot-manager-file-system
  
  SnapshotManagerEFSMountTarget:
    Type: AWS::EFS::MountTarget
    DeletionPolicy: Retain
    DependsOn:
      - SnapshotManagerEFSFileSystem
    Properties: 
      FileSystemId: !Ref SnapshotManagerEFSFileSystem
      SecurityGroups: 
        - !Ref SecurityGroup
        - !Ref ClusterSecurityGroup
      SubnetId: !Ref Subnet2Id
   
  namespace:
    Type: "AWSQS::Kubernetes::Resource"
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: netbackup
      Manifest: !Sub |
        apiVersion: v1
        kind: Namespace
        metadata:
          name: netbackup

  PrimaryCatalogPV:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn:
      - EFSFileSystem
      - namespace
      - PrimaryEFSMountTarget
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: netbackup
      Manifest: !Sub 
        - | 
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: pv-catalog-${InstanceName}-primary-0
          spec:
            capacity:
              storage: ${PVCatalogSize}
            volumeMode: Filesystem
            accessModes:
              - ReadWriteMany
            persistentVolumeReclaimPolicy: Retain
            storageClassName: ""
            claimRef:
              name: catalog-${InstanceName}-primary-0  # Name of the PVC to bind with 
              namespace: netbackup
            mountOptions:
              - tls
            csi:
              driver: efs.csi.aws.com
              volumeHandle: ${FileSystemId}
        -
          PVCatalogSize: !Join [ "", [!Ref PrimaryCatalogSize, "Gi"]]
          FileSystemId: !Ref EFSFileSystem
  
  PrimaryCatalogPVC:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn:
      - PrimaryCatalogPV
      - namespace
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: netbackup
      Manifest: !Sub 
        - | 
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: catalog-${InstanceName}-primary-0
            namespace: netbackup
          spec:
            accessModes:
              - ReadWriteMany
            storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
            volumeName: pv-catalog-${InstanceName}-primary-0 #   name of the PV to bind with
            resources:
              requests:
                storage: ${PVCCatalogSize}
        - 
          PVCCatalogSize: !Join [ "", [!Ref PrimaryCatalogSize, "Gi"]]

  SnapshotManagerLog:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn:
      - namespace
      - SnapshotManagerEFSFileSystem
      - SnapshotManagerEFSMountTarget
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: netbackup
      Manifest: !Sub |
        kind: StorageClass
        apiVersion: storage.k8s.io/v1
        metadata:
          name: cp-log
        provisioner: efs.csi.aws.com
        parameters:
          provisioningMode: efs-ap
          fileSystemId: ${SnapshotManagerEFSFileSystem}
          directoryPerms: "700"
        reclaimPolicy: Retain
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
