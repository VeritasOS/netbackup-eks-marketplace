AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template that installs EFS Driver.

Parameters:
  EKSOpenIdConnectProviderUrl:
    Type: String
  ClusterName:
    Type: String
  ClusterEndpoint:
    Type: String

Mappings:
  ImageMap:
    af-south-1:
      AMI: '877085696533.dkr.ecr.af-south-1.amazonaws.com'
    us-west-1:
      AMI: '602401143452.dkr.ecr.us-west-1.amazonaws.com'
    us-east-1:
      AMI: '602401143452.dkr.ecr.us-east-1.amazonaws.com'
    ap-northeast-1:
      AMI: '602401143452.dkr.ecr.ap-northeast-1.amazonaws.com'
    eu-west-1:
      AMI: '602401143452.dkr.ecr.eu-west-1.amazonaws.com'
    ap-northeast-2:
      AMI: '602401143452.dkr.ecr.ap-northeast-2.amazonaws.com'
    ap-southeast-1:
      AMI: '602401143452.dkr.ecr.ap-southeast-1.amazonaws.com'
    eu-west-2:
      AMI: '602401143452.dkr.ecr.eu-west-2.amazonaws.com'
    ca-central-1:
      AMI: '602401143452.dkr.ecr.ca-central-1.amazonaws.com'
    ap-southeast-2:
      AMI: '602401143452.dkr.ecr.ap-southeast-2.amazonaws.com'
    us-west-2:
      AMI: '602401143452.dkr.ecr.us-west-2.amazonaws.com'
    ap-south-1:
      AMI: '602401143452.dkr.ecr.ap-south-1.amazonaws.com'
    eu-central-1:
      AMI: '602401143452.dkr.ecr.eu-central-1.amazonaws.com'
    sa-east-1:
      AMI: '602401143452.dkr.ecr.sa-east-1.amazonaws.com'
    us-east-2:
      AMI: '602401143452.dkr.ecr.us-east-2.amazonaws.com'
    ap-east-1:
      AMI: '800184023465.dkr.ecr.ap-east-1.amazonaws.com'
    me-south-1:
      AMI: '558608220178.dkr.ecr.me-south-1.amazonaws.com'
    eu-west-3:
      AMI: '602401143452.dkr.ecr.eu-west-3.amazonaws.com'
    eu-north-1:
      AMI: '602401143452.dkr.ecr.eu-north-1.amazonaws.com'
    eu-south-1:
      AMI: '590381155156.dkr.ecr.eu-south-1.amazonaws.com'
    us-gov-east-1:
      AMI: '151742754352.dkr.ecr.us-gov-east-1.amazonaws.com'
    us-gov-west-1:
      AMI: '013241004608.dkr.ecr.us-gov-west-1.amazonaws.com'
    ap-southeast-3:
      AMI: '296578399912.dkr.ecr.ap-southeast-3.amazonaws.com'
    ap-northeast-3:
      AMI: '602401143452.dkr.ecr.ap-northeast-3.amazonaws.com'

Resources:
  OIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties: 
      ClientIdList: 
        - sts.amazonaws.com
      ThumbprintList: 
        - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280
      Url: !Ref EKSOpenIdConnectProviderUrl
  EfsDriverServiceAccountRole:
    Type: "AWS::IAM::Role"
    DependsOn:
      - OIDCProvider
    Properties:
      AssumeRolePolicyDocument:
                            Fn::Sub: 
                              - |
                                {
                                  "Version": "2012-10-17",
                                  "Statement": [
                                    {
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.${AWS::Region}.amazonaws.com/id/${id}"
                                      },
                                      "Action": "sts:AssumeRoleWithWebIdentity",
                                      "Condition": {
                                        "StringEquals": {
                                          "${clusteridsub}": "system:serviceaccount:kube-system:efs-csi-controller-sa",
                                          "${clusteridaud}": "sts.amazonaws.com"
                                        }
                                      }
                                    }
                                  ]
                                }
                              - 
                                clusteridsub: !Join ["",[!Sub "oidc.eks.${AWS::Region}.amazonaws.com/id/",!Select [1, !Split ["//", !Select [0, !Split [".", !Ref ClusterEndpoint]]]],":sub"]]
                                clusteridaud: !Join ["",[!Sub "oidc.eks.${AWS::Region}.amazonaws.com/id/",!Select [1, !Split ["//", !Select [0, !Split [".", !Ref ClusterEndpoint]]]],":aud"]]
                                id: !Select [1, !Split ["//", !Select [0, !Split [".", !Ref ClusterEndpoint]]]]
                                Region: !Sub ${AWS::Region}
      Path: "/"
      Policies:
        - PolicyName: AmazonEKS_EFS_CSI_Driver_Policy
          PolicyDocument:
            !Sub 
                 |
                 {
                  "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Action": [
                            "elasticfilesystem:DescribeAccessPoints",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeMountTargets",
                            "ec2:DescribeAvailabilityZones"
                          ],
                        "Resource": "*",
                        "Effect": "Allow"
                      },
                      {
                        "Condition": {
                          "StringLike": {
                            "aws:RequestTag/efs.csi.aws.com/cluster": "true"
                          }
                        },
                        "Action": [
                            "elasticfilesystem:CreateAccessPoint"
                        ],
                        "Resource": "*",
                          "Effect": "Allow"
                      },
                      {
                        "Condition": {
                          "StringEquals": {
                            "aws:ResourceTag/efs.csi.aws.com/cluster": "true"
                          }
                        },
                        "Action": "elasticfilesystem:DeleteAccessPoint",
                        "Resource": "*",
                        "Effect": "Allow"
                      }
                    ]
                  }
      # PermissionsBoundary: "arn:aws:iam::975255136272:policy/AWS_Engineering_Admin_Permission_Boundary"

  EfsDriverServiceAccount:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn:
      - EfsDriverServiceAccountRole
      - OIDCProvider
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: kube-system
      Manifest: !Sub |
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              labels:
                app.kubernetes.io/name: aws-efs-csi-driver
              name: efs-csi-controller-sa
              namespace: kube-system
              annotations:
                eks.amazonaws.com/role-arn: ${EfsDriverServiceAccountRole.Arn}
        
  EfsDriverInstall:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn:
      - EfsDriverServiceAccount
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: kube-system
      Manifest: !Sub 
        - |
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              labels:
                app.kubernetes.io/name: aws-efs-csi-driver
              name: efs-csi-node-sa
              namespace: kube-system
            ---
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRole
            metadata:
              labels:
                app.kubernetes.io/name: aws-efs-csi-driver
              name: efs-csi-external-provisioner-role
            rules:
            - apiGroups:
              - ""
              resources:
              - persistentvolumes
              verbs:
              - get
              - list
              - watch
              - create
              - delete
            - apiGroups:
              - ""
              resources:
              - persistentvolumeclaims
              verbs:
              - get
              - list
              - watch
              - update
            - apiGroups:
              - storage.k8s.io
              resources:
              - storageclasses
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - ""
              resources:
              - events
              verbs:
              - list
              - watch
              - create
              - patch
            - apiGroups:
              - storage.k8s.io
              resources:
              - csinodes
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - ""
              resources:
              - nodes
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - coordination.k8s.io
              resources:
              - leases
              verbs:
              - get
              - watch
              - list
              - delete
              - update
              - create
            ---
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              labels:
                app.kubernetes.io/name: aws-efs-csi-driver
              name: efs-csi-provisioner-binding
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: efs-csi-external-provisioner-role
            subjects:
            - kind: ServiceAccount
              name: efs-csi-controller-sa
              namespace: kube-system
            ---
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              labels:
                app.kubernetes.io/name: aws-efs-csi-driver
              name: efs-csi-controller
              namespace: kube-system
            spec:
              replicas: 2
              selector:
                matchLabels:
                  app: efs-csi-controller
                  app.kubernetes.io/instance: kustomize
                  app.kubernetes.io/name: aws-efs-csi-driver
              template:
                metadata:
                  labels:
                    app: efs-csi-controller
                    app.kubernetes.io/instance: kustomize
                    app.kubernetes.io/name: aws-efs-csi-driver
                spec:
                  containers:
                  - args:
                    - --endpoint=$(CSI_ENDPOINT)
                    - --logtostderr
                    - --v=2
                    - --delete-access-point-root-dir=false
                    env:
                    - name: CSI_ENDPOINT
                      value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
                    image: ${imageName}/eks/aws-efs-csi-driver:v1.3.8
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      failureThreshold: 5
                      httpGet:
                        path: /healthz
                        port: healthz
                      initialDelaySeconds: 10
                      periodSeconds: 10
                      timeoutSeconds: 3
                    name: efs-plugin
                    ports:
                    - containerPort: 9909
                      name: healthz
                      protocol: TCP
                    securityContext:
                      privileged: true
                    volumeMounts:
                    - mountPath: /var/lib/csi/sockets/pluginproxy/
                      name: socket-dir
                  - args:
                    - --csi-address=$(ADDRESS)
                    - --v=2
                    - --feature-gates=Topology=true
                    - --extra-create-metadata
                    - --leader-election
                    env:
                    - name: ADDRESS
                      value: /var/lib/csi/sockets/pluginproxy/csi.sock
                    image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-provisioner:v2.1.1
                    imagePullPolicy: IfNotPresent
                    name: csi-provisioner
                    volumeMounts:
                    - mountPath: /var/lib/csi/sockets/pluginproxy/
                      name: socket-dir
                  - args:
                    - --csi-address=/csi/csi.sock
                    - --health-port=9909
                    image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/livenessprobe:v2.2.0
                    imagePullPolicy: IfNotPresent
                    name: liveness-probe
                    volumeMounts:
                    - mountPath: /csi
                      name: socket-dir
                  hostNetwork: true
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: system-cluster-critical
                  serviceAccountName: efs-csi-controller-sa
                  volumes:
                  - emptyDir: {}
                    name: socket-dir
            ---
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              labels:
                app.kubernetes.io/name: aws-efs-csi-driver
              name: efs-csi-node
              namespace: kube-system
            spec:
              selector:
                matchLabels:
                  app: efs-csi-node
                  app.kubernetes.io/instance: kustomize
                  app.kubernetes.io/name: aws-efs-csi-driver
              template:
                metadata:
                  labels:
                    app: efs-csi-node
                    app.kubernetes.io/instance: kustomize
                    app.kubernetes.io/name: aws-efs-csi-driver
                spec:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: eks.amazonaws.com/compute-type
                            operator: NotIn
                            values:
                            - fargate
                  containers:
                  - args:
                    - --endpoint=$(CSI_ENDPOINT)
                    - --logtostderr
                    - --v=2
                    env:
                    - name: CSI_ENDPOINT
                      value: unix:/csi/csi.sock
                    image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/aws-efs-csi-driver:v1.3.8
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      failureThreshold: 5
                      httpGet:
                        path: /healthz
                        port: healthz
                      initialDelaySeconds: 10
                      periodSeconds: 2
                      timeoutSeconds: 3
                    name: efs-plugin
                    ports:
                    - containerPort: 9809
                      name: healthz
                      protocol: TCP
                    securityContext:
                      privileged: true
                    volumeMounts:
                    - mountPath: /var/lib/kubelet
                      mountPropagation: Bidirectional
                      name: kubelet-dir
                    - mountPath: /csi
                      name: plugin-dir
                    - mountPath: /var/run/efs
                      name: efs-state-dir
                    - mountPath: /var/amazon/efs
                      name: efs-utils-config
                    - mountPath: /etc/amazon/efs-legacy
                      name: efs-utils-config-legacy
                  - args:
                    - --csi-address=$(ADDRESS)
                    - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                    - --v=2
                    env:
                    - name: ADDRESS
                      value: /csi/csi.sock
                    - name: DRIVER_REG_SOCK_PATH
                      value: /var/lib/kubelet/plugins/efs.csi.aws.com/csi.sock
                    - name: KUBE_NODE_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: spec.nodeName
                    image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-node-driver-registrar:v2.1.0
                    imagePullPolicy: IfNotPresent
                    name: csi-driver-registrar
                    volumeMounts:
                    - mountPath: /csi
                      name: plugin-dir
                    - mountPath: /registration
                      name: registration-dir
                  - args:
                    - --csi-address=/csi/csi.sock
                    - --health-port=9809
                    - --v=2
                    image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/livenessprobe:v2.2.0
                    imagePullPolicy: IfNotPresent
                    name: liveness-probe
                    volumeMounts:
                    - mountPath: /csi
                      name: plugin-dir
                  dnsPolicy: ClusterFirst
                  hostNetwork: true
                  nodeSelector:
                    beta.kubernetes.io/os: linux
                  priorityClassName: system-node-critical
                  serviceAccountName: efs-csi-node-sa
                  tolerations:
                  - operator: Exists
                  volumes:
                  - hostPath:
                      path: /var/lib/kubelet
                      type: Directory
                    name: kubelet-dir
                  - hostPath:
                      path: /var/lib/kubelet/plugins/efs.csi.aws.com/
                      type: DirectoryOrCreate
                    name: plugin-dir
                  - hostPath:
                      path: /var/lib/kubelet/plugins_registry/
                      type: Directory
                    name: registration-dir
                  - hostPath:
                      path: /var/run/efs
                      type: DirectoryOrCreate
                    name: efs-state-dir
                  - hostPath:
                      path: /var/amazon/efs
                      type: DirectoryOrCreate
                    name: efs-utils-config
                  - hostPath:
                      path: /etc/amazon/efs
                      type: DirectoryOrCreate
                    name: efs-utils-config-legacy
            ---
            apiVersion: storage.k8s.io/v1
            kind: CSIDriver
            metadata:
              annotations:
                helm.sh/hook: pre-install, pre-upgrade
                helm.sh/hook-delete-policy: before-hook-creation
                helm.sh/resource-policy: keep
              name: efs.csi.aws.com
            spec:
              attachRequired: false
        - 
          imageName: !FindInMap [ImageMap, !Ref AWS::Region, AMI]
