AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template that deploys NBUX.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Basics
      Parameters:
      - InstanceName
      - LicenseKey
    - Label:
        default: Cluster Configuration
      Parameters:
      - CreateNewCluster
      - VirtualNetwork
      - EKSClusterName
      - EKSPublicAccessEndpoint
      - EKSSubnet1Id
      - EKSSubnet2Id
      - SubnetForLoadBalancer
      - EKSSecurityGroupIds
      - EKSServiceIpv4Cidr
      - EKSRoleArn
      - EKSClusterAccessRoleArn
      - EKSClusterSecurityGroup
    - Label:
        default: Primary Server Node group Configuration
      Parameters:
      - PrimaryNodeGroupName
      - PrimaryInstanceType
      - PrimaryDesiredNodeSize
    - Label:
        default: Media Server Node group Configuration
      Parameters:
      - MediaNodeGroupName
      - MediaInstanceType
      - MediaDesiredNodeSize
    - Label:
        default: Storage Server Node group Configuration
      Parameters:
      - StorageNodeGroupName
      - StorageInstanceType
      - StorageDesiredNodeSize
    - Label:
        default: Snapshot Manager Control Plane Node group Configuration
      Parameters:
      - ControlPlaneNodeGroupName
      - ControlPlaneInstanceType
      - ControlPlaneDesiredNodeSize
    - Label:
        default: Snapshot Manager Data Plane Node group Configuration
      Parameters:
      - DataPlaneNodeGroupName
      - DataPlaneInstanceType
      - DataPlaneDesiredNodeSize
    - Label:
        default: Primary Server Details
      Parameters:
      - PrimaryHostNameMapping
      - PrimaryCatalogSize
      - PrimaryLogsSize
      - PrimaryDataSize
      - PrimaryUsername
      - PrimaryPassword
      - PrimaryConfirmPassword
      - HostMasterKeyID
      - HostMasterKeyPassphrase
      - ConfirmHostMasterKeyPassphrase
      - KeyProtectionKeyID
      - KeyProtectionKeyPassphrase
      - ConfirmKeyProtectionKeyPassphrase    
    - Label:
        default: Media Server Details
      Parameters:
      - MediaServerReplicas
      - MediaHostNameMapping
      - MediaDataSize
      - MediaLogsSize
    - Label:
        default: Storage Server Details
      Parameters:
      - StorageServerReplicas
      - StorageHostNameMapping
      - DataSizeInGi
      - StorageCatalogSizeInGi
      - StorageLogsSizeInGi
      - StorageServerUsername
      - StorageServerPassword
      - StorageServerConfirmPassword
      - KMSKeyGroup
      - KMSKeyName
      - KMSKeyPassphrase
      - ConfirmKMSKeyPassphrase
    - Label:
        default: Snapshot Server Details
      Parameters:
      - SnapshotServerHostNameMapping
      - SnapshotServerLogsSize
      - SnapshotServerDataSize
      - SnapshotServerUsername
      - SnapshotServerPassword
      - SnapshotServerConfirmPassword
    - Label:
        default: Other Configuration
      Parameters:
      - BucketName
      - ExtensionActivation
      - KubernetesHelmRoleArn
      - KubernetesResourceRoleArn
      - KubernetesClusterRoleName

    ParameterLabels:
      InstanceName:
        default: Instance Name
      LicenseKey:
        default: License Key
      CreateNewCluster:
        default: Create a new EKS cluster ?
      EKSClusterName:
        default: Kubernetes cluster name
      VirtualNetwork: 
        default: Virtual Network
      EKSPublicAccessEndpoint:
        default: Configure access to the Kubernetes API server endpoint from outside of your VPC
      EKSSecurityGroupIds:
        default: Additional security group
      EKSSubnet1Id:
        default: Subnet1 for EKS Cluster
      EKSSubnet2Id:
        default: Subnet2 for EKS Cluster
      SubnetForLoadBalancer:
        default: Subnet for Load Balancer
      EKSRoleArn:
        default: ARN of Cluster service role
      EKSClusterAccessRoleArn:
        default: ARN of IAM role required to access EKS Cluster from EC2
      EKSClusterSecurityGroup:
        default: Cluster security group created by EKS      
      EKSServiceIpv4Cidr:
        default: CIDR block to assign Kubernetes service IP addresses from for your Amazon EKS cluster
      PrimaryNodeGroupName:
        default: Primary server node group name
      PrimaryDesiredNodeSize:
        default: Max node size
      PrimaryInstanceType:
        default: Instance type for node group
      MediaServerReplicas:
        default: Media Server Replicas
      PrimaryHostNameMapping:
        default: Hostname Mapping
      PrimaryCatalogSize:
        default: Catalog Size in Gi
      PrimaryLogsSize:
        default: Logs Size in Gi
      PrimaryDataSize:
        default: Data Size in Gi
      PrimaryUsername:
        default: Username
      PrimaryPassword:
        default: Password
      PrimaryConfirmPassword:
        default: ConfirmPassword   
      HostMasterKeyID:
        default: Host Master Key ID
      HostMasterKeyPassphrase:
        default: Host Master Key Passphrase
      ConfirmHostMasterKeyPassphrase:
        default: Confirm Host Master Key Passphrase
      KeyProtectionKeyID:
        default: Key Protection Key ID
      KeyProtectionKeyPassphrase:
        default: Key Protection Key Passphrase
      ConfirmKeyProtectionKeyPassphrase:
        default: Confirm Key Protection Key Passphrase
      MediaNodeGroupName:
        default: Media server node group name
      MediaDesiredNodeSize:
        default: Max node size
      MediaInstanceType:
        default: Instance type for node group
      MediaHostNameMapping:
        default: Hostname mapping
      MediaDataSize:
        default: Data Size in Gi
      MediaLogsSize:
        default: Logs Size in Gi
      StorageNodeGroupName:
        default: Storage server node group name
      StorageDesiredNodeSize:
        default: Max node size
      StorageInstanceType:
        default: Instance type for node group
      StorageServerReplicas:
        default: Storage Server Replicas
      StorageHostNameMapping:
        default: Hostname mapping
      DataSizeInGi:
        default: Data Size in Gi
      StorageCatalogSizeInGi:
        default: Catalog Size in Gi
      StorageLogsSizeInGi:
        default: Logs Size in Gi
      StorageServerUsername:
        default: Username
      StorageServerPassword:
        default: Password
      StorageServerConfirmPassword:
        default: Confirm Password
      KMSKeyGroup:
        default: KMS Key Group
      KMSKeyName:
        default: KMS Key Name
      KMSKeyPassphrase:
        default: KMS Key Passphrase
      ConfirmKMSKeyPassphrase:
        default: Confirm KMS Key Passphrase
      ControlPlaneNodeGroupName:
        default: Snapshot Manager control plane node group name
      ControlPlaneDesiredNodeSize:
        default: Max node size
      ControlPlaneInstanceType:
        default: Instance type for node group
      DataPlaneNodeGroupName:
        default: Snapshot Manager data plane node group name
      DataPlaneDesiredNodeSize:
        default: Max node size
      DataPlaneInstanceType:
        default: Instance type for node group
      SnapshotServerHostNameMapping:
        default: Hostname Mapping      
      SnapshotServerLogsSize:
        default: Logs Size in Gi
      SnapshotServerDataSize:
        default: Data Size in Gi
      SnapshotServerUsername:
        default: Username
      SnapshotServerPassword:
        default: Password
      SnapshotServerConfirmPassword:
        default: Confirm Password
      BucketName:
        default: S3 Bucket Name containing deployment templates
      ExtensionActivation:
        default: Confirm AWSQS::Kubernetes::Helm, AWSQS::EKS::Cluster, AWSQS::Kubernetes::Resource Cloudfromation extensions are activated?
      KubernetesHelmRoleArn:
        default: ARN of Execution role of AWSQS::Kubernetes::Helm extension
      KubernetesResourceRoleArn:
        default: ARN of Execution role of AWSQS::Kubernetes::Resource extension
      KubernetesClusterRoleName:
        default: Name of Execution role of AWSQS::EKS::Cluster extension

Parameters:
  InstanceName:
    Type: String
    AllowedPattern: (?!.*-$)(^[a-z0-9][a-z0-9-]{2,24}$)
    Description: Provide an instance name which should be used for the application environment in the cluster. It must be unique for each deployment.
    ConstraintDescription: "Instance must be between 3 to 24 characters long, and can contain only lowercase letters, numbers and hyphens. It must start and end with an alphanumeric character."
  LicenseKey:
    Type: String
    AllowedPattern: ((^([A-Z,0-9]{4}-){9})(([A-Z,0-9]{1,4})$))
    Description: Enter your NetBackup License Key
    ConstraintDescription: "Please make sure your License key format is like XXXX-XXXX-XXXX-XXXX-XXXX-XXXX-XXXX-XXXX-XXXX-X[XXX]"
  CreateNewCluster:
    Type: String
    AllowedValues: ["Yes", "No"]
    Default: "Yes"
    Description: Select 'Yes' to create a new EKS cluster, or select 'No' to provide an existing EKS cluster.
  EKSClusterName:
    Type: String
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9-]{1,100}$)
    Description: Name for the EKS cluster. This must be unique within the Region.
    ConstraintDescription: >-
        "Cluster name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 100
        characters."
  VirtualNetwork: 
    Type: AWS::EC2::VPC::Id
    Description: Select a virtual network for the EKS cluster subnet and the application Load Balancer subnet. We do not support creation of virtual network as part of deployment. Make sure you select the same network as that of the cluster vNet.
  EKSPublicAccessEndpoint:
    Type: String
    AllowedValues: ["true", "false"]
    Default: false
    Description: Configure access to the Kubernetes API server endpoint from outside of your VPC.
  EKSSecurityGroupIds:
    Type: AWS::EC2::SecurityGroup::Id
    Description: >-
     Specify additional security group for your Amazon EKS Cluster
  EKSSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: Select a subnet from the virtual network. Subnet1 and Subnet2 must be in different availability zone.
  EKSSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: Select a subnet from the virtual network. Subnet1 and Subnet2 must be in different availability zone. This subnet will be used to create node groups.
  SubnetForLoadBalancer:
    Type: AWS::EC2::Subnet::Id
    Description: Select a subnet from the virtual network. Load balancer and Node Group subnets must be in same Availability Zone.
  EKSServiceIpv4Cidr:
    Type: String
    Default: 10.100.0.0/16
    Description: The CIDR block to assign Kubernetes service IP addresses from.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: "Must be in valid CIDR notation. For example : 10.0.0.0/16"
  EKSRoleArn:
    Type: String
    Description: Provide the ARN of IAM role to allow the Kubernetes control plane to manage AWS resources on your behalf. This property cannot be changed after the cluster is created. To create a new role, follow the instructions in the Amazon EKS User Guide.
    MinLength: 1
    ConstraintDescription: Please provide ARN of Cluster service role.
  EKSClusterAccessRoleArn:
    Type: String
    Default: ""
    Description: >-
     Required in case of new cluster creation only.
     Specify the Amazon Resource Name (ARN) of the IAM role, required to access EKS Cluster from EC2. It must be different from the role mentioned above.
  EKSClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: >-
     Required in case of existing cluster only (dummy value needs to be provided in case of new cluster)
     Specify security group created for cluster by Amazon EKS. 
  PrimaryNodeGroupName:
    Type: String
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9-]{1,100}$)
    Description: Specify Primary server node group name.
    ConstraintDescription: >-
        "Primary Node group name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 100
        characters."
  PrimaryInstanceType:
    Type: String
    Default: "m5.2xlarge"
    Description: Specify the instance types for a node group.  
  PrimaryHostNameMapping:
    Type: String
    Description: >-
     Provide hostname (comma seperated) of NetBackup Primary Server.
     Hostname shoud be in format of <IP>:<FQDN> e.g <IP>:<FQDN>
     <FQDN> must be entered in lower case, and be compliant with RFC 1123 and RFC 952. 
     For example, the underscore character ( _ ) is not a supported character for hostnames.
  PrimaryCatalogSize:
    Type: String
    Default: "500"
    AllowedPattern: ^([1-9][0-9]{2,})$
    Description: Provide the size for Primary server catalog. The catalog volume must be at least 100 Gi.
    ConstraintDescription: "Only a numerical value of 100 or above is allowed for Primary Catalog Size."
  PrimaryLogsSize:
    Type: String
    Default: "500"
    AllowedPattern: ^([3-9][0-9]|[1-9][0-9]{2,})$
    Description: Provide the size for Primary server logs. The log volume must be at least 30 Gi.
    ConstraintDescription: "Only a numerical value of 30 or above is allowed for Primary Log Size."
  PrimaryDataSize:
    Type: String
    Default: "100"
    AllowedPattern: ^([3-9][0-9]|[1-9][0-9]{2,})$
    Description: Provide the size for Primary server data. The data volume must be at least 30 Gi.
    ConstraintDescription: "Only a numerical value of 30 or above is allowed for Primary Data Size."
  PrimaryUsername:
    Type: String
    AllowedPattern: ^[a-z]([a-z0-9_-]{0,31})$
    Description: Provide username using which Primary Server will be configured.
    ConstraintDescription: "Primary Username must be of 1-32 characters long and must start with a lowercase letter and can only contain alphanumeric characters, hyphens, and underscores."
  PrimaryPassword:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide password for the user using which Primary Server will be configured.
    ConstraintDescription: "Primary Password must be at least 12 characters long and must have at least a number, a lower case, an upper case and a special character (@$!%*?&.)"
  PrimaryConfirmPassword:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide password for the user using which Primary Server will be configured.
  HostMasterKeyID:
    Type: String
    AllowedPattern: ^[a-z]([a-z0-9_-]{0,31})$
    Description: Provide the Host Master Key ID (HMKID).
    ConstraintDescription: "Host Master Key ID must be of 1-32 characters long, must only contain lowercase alphanumeric characters, hyphens, and underscores."
  HostMasterKeyPassphrase:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide the Host Master Key passphrase.
    ConstraintDescription: "Host Master Key Passphrase must be at least 12 characters long and must have at least a number, a lower case, an upper case and a special character (@$!%*?&.)"
  ConfirmHostMasterKeyPassphrase:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide the Host Master Key passphrase
  KeyProtectionKeyID:
    Type: String
    AllowedPattern: ^[a-z]([a-z0-9_-]{0,31})$
    Description: Provide the Key Protection Key ID (KPKID).
    ConstraintDescription: "Key Protection Key ID must be of 1-32 characters long, must only contain lowercase alphanumeric characters, hyphens, and underscores."
  KeyProtectionKeyPassphrase:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide the Key Protection Key passphrase.
    ConstraintDescription: "Key Protection Key Passphrase must be at least 12 characters long and must have at least a number, a lower case, an upper case and a special character (@$!%*?&.)"
  ConfirmKeyProtectionKeyPassphrase:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide the Key Protection Key passphrase.
  MediaNodeGroupName:
    Type: String
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9-]{1,100}$)
    Description: Specify Media server node group name.
    ConstraintDescription: >-
        "Media Node group name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 100
        characters."
  MediaInstanceType:
    Type: String
    Default: "m5.2xlarge"
    Description: Specify the instance types for a node group.
  MediaServerReplicas:
    Type: Number
    MinValue: 1
    MaxValue: 16
    Default: 1
    Description: Provide the number of replicas for Media server.
  MediaHostNameMapping:
    Type: String
    Description: >-
     Provide hostname mapping of NetBackup Media Server.
     The number of entries must be greater than or equal to the replica count.
     Hostname shoud be in format of <IP>:<FQDN>, multiple values can be provided comma separated e.g <IP>:<FQDN>,<IP>:<FQDN> 
     <FQDN> must be entered in lower case, and be compliant with RFC 1123 and RFC 952. 
     For example, the underscore character ( _ ) is not a supported character for hostnames.
  MediaDataSize:
    Type: String
    Default: "100"
    AllowedPattern: ^([5-9][0-9]|[1-9][0-9]{2,})$
    Description: Provide the size for Media server Data. The data volume must be at least 50 Gi.
    ConstraintDescription: "Only a numerical value of 50 or above is allowed for Media Data Size."
  MediaLogsSize:
    Type: String
    Default: "500"
    AllowedPattern: ^([3-9][0-9]|[1-9][0-9]{2,})$
    Description: Provide the size for Media server logs. The log volume must be at least 30 Gi.
    ConstraintDescription: "Only a numerical value of 30 or above is allowed for Media Log Size."
  StorageNodeGroupName:
    Type: String
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9-]{1,100}$)
    Description: Specify Storage server node group name.
    ConstraintDescription: >-
        "Storage Node group name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 100
        characters."
  StorageInstanceType:
    Type: String
    Default: "r5.2xlarge"
    Description: Specify the instance types for a node group.
  PrimaryDesiredNodeSize:
    Type: Number
    MinValue: 2
    MaxValue: 3
    Default: 2
    Description: Specify the current number of nodes that the managed node group should maintain.  
  MediaDesiredNodeSize:
    Type: Number
    MinValue: 1
    MaxValue: 20
    Default: 1
    Description: >-
     Specify the current number of nodes that the managed node group should maintain.
     Node count must be greater than or equal to the replica count.
  StorageDesiredNodeSize:
    Type: Number
    MinValue: 4
    MaxValue: 20
    Default: 4
    Description: >-
     Specify the current number of nodes that the managed node group should maintain.
     Node count must be greater than or equal to the replica count.
  ControlPlaneNodeGroupName:
    Type: String
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9-]{1,100}$)
    Description: Specify Control Plane node group name.
    ConstraintDescription: >-
        "Control Plane Node group name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 100
        characters."
  ControlPlaneInstanceType:
    Type: String
    Default: "m5.xlarge"
    Description: Specify the instance types for a node group.
  ControlPlaneDesiredNodeSize:
    Type: Number
    MinValue: 1
    MaxValue: 2
    Default: 1
    Description: Specify the current number of nodes that the managed node group should maintain.
  DataPlaneNodeGroupName:
    Type: String
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9-]{1,100}$)
    Description: Specify Data Plane node group name.
    ConstraintDescription: >-
        "Data Plane Node group name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 100
        characters."
  DataPlaneInstanceType:
    Type: String
    Default: "m5.xlarge"
    Description: Specify the instance types for a node group.
  DataPlaneDesiredNodeSize:
    Type: Number
    MinValue: 2
    MaxValue: 3
    Default: 2
    Description: Specify the current number of nodes that the managed node group should maintain.    
  StorageServerReplicas:
    Type: Number
    MinValue: 4
    MaxValue: 16
    Default: 4
    Description: Provide the number of replicas for Storage server.
  StorageHostNameMapping:
    Type: String
    Description: >-
     Provide hostname mapping of NetBackup Storage Server.
     The number of entries must be greater than or equal to the replica count.
     Hostname shoud be in format of <IP>:<FQDN>, multiple values can be provided comma separated e.g <IP>:<FQDN>,<IP>:<FQDN> 
     <FQDN> must be entered in lower case, and be compliant with RFC 1123 and RFC 952. 
     For example, the underscore character ( _ ) is not a supported character for hostnames.
  DataSizeInGi:
    Type: String
    Default: "1536"
    AllowedPattern: ^([5-9]|[1-9][0-9]{1,})$
    Description: Provide the size for Storage server data volume. Recommended size is at least 5 Gi
    ConstraintDescription: "Only a numerical value of 5 or above is allowed for Storage Server Data Size."
  StorageCatalogSizeInGi:
    Type: String
    Default: "200"
    AllowedPattern: ^([5-9]|[1-9][0-9]{1,})$
    Description: Provide the size for Storage server catalog. The catalog volume must be at least 5 Gi
    ConstraintDescription: "Only a numerical value of 5 or above is allowed for Storage Server Catalog Size."
  StorageLogsSizeInGi:
    Type: String
    AllowedPattern: ^([5-9]|[1-9][0-9]{1,})$
    Default: "50"
    Description: Provide the size for Storage server logs. The log volume must be at least 5 Gi.
    ConstraintDescription: "Only a numerical value of 5 or above is allowed for Storage Server Log Size."
  StorageServerUsername:
    Type: String
    AllowedPattern: ^[a-z]([a-z0-9_-]{0,31})$
    Description: Provide username using which Storage Server will be configured.
    ConstraintDescription: "Storage Server username must be of 1-32 characters long, must contain only lowercase alphanumeric characters, hyphens or underscores."
  StorageServerPassword:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide password for the user using which Storage Server will be configured.
    ConstraintDescription: "Storage Server password must be at least 12 characters long and must have at least a number, a lower case, an upper case and a special character (@$!%*?&.)"
  StorageServerConfirmPassword:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide password for the user using which Storage Server will be configured.
  KMSKeyGroup:
    Type: String
    AllowedPattern: ^(?=.*[a-zA-Z])[a-zA-Z0-9-]{1,64}$
    Description: Provide the name of KMS Key Group.
    ConstraintDescription: "KMS Key Group Name must be of 1-64 characters long and must contain at least one alphabet."
  KMSKeyName:
    Type: String
    AllowedPattern: ^[a-z]([a-z0-9_-]{0,31})$
    Description: Provide the KMS key name.
    ConstraintDescription: "KMS Key Name must be of 1-32 characters long, must contain only lowercase alphanumeric characters, hyphens or underscores."
  KMSKeyPassphrase:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide the KMS Key passphrase.
    ConstraintDescription: "KMS Key Passphrase must be at least 12 characters long and must have at least a number, a lower case, an upper case and a special character (@$!%*?&.)"
  ConfirmKMSKeyPassphrase:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide the KMS Key passphrase.
  SnapshotServerHostNameMapping:
    Type: String
    Description: >-
     Provide hostname mapping of NetBackup Snapshot Server.
     Hostname shoud be in format of <IP>:<FQDN> e.g <IP>:<FQDN>,<IP>:<FQDN> 
     <FQDN> must be entered in lower case, and be compliant with RFC 1123 and RFC 952. 
     For example, the underscore character ( _ ) is not a supported character for hostnames.
  SnapshotServerLogsSize:
    Type: String
    Default: "100"
    AllowedPattern: ^([5-9]|[1-9][0-9]{1,})$
    Description: Provide the size for Snapshot server logs. The log volume must be at least 5 Gi.
    ConstraintDescription: "Only a numerical value of 5 or above is allowed for Snapshot Manager Log Size."
  SnapshotServerDataSize:
    Type: String
    Default: "100"
    AllowedPattern: ^([1-9][0-9]{2,})$
    Description: Provide the size for Snapshot server Data. The Data volume must be at least 100 Gi.
    ConstraintDescription: "Only a numerical value of 100 or above is allowed for Snapshot Manager Data Size."
  SnapshotServerUsername:
    Type: String
    AllowedPattern: ^[a-z]([a-z0-9_-]{0,31})$
    Description: Provide username using which Storage Server will be configured.
    ConstraintDescription: "Snapshot Manager username must be of 1-32 characters long, must contain only lowercase alphanumeric characters, hyphens or underscores."
  SnapshotServerPassword:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide password for the user using which Snapshot Server will be configured.
    ConstraintDescription: "Snapshot Manager password must be at least 12 characters long and must have at least a number, a lower case, an upper case and a special character (@$!%*?&.)"
  SnapshotServerConfirmPassword:
    Type: String
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&.])[A-Za-z0-9@$!%*?&.]{12,}$
    NoEcho: true
    Description: Provide password for the user using which Storage Server will be configured.
  ExtensionActivation:
    Type: String
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Select 'No' to activate cloudformation extensions, or select 'Yes' if extensions are already activated.
  KubernetesHelmRoleArn:
    Type: String
    Default: ""
    Description: >-
      Required only if AWSQS::Kubernetes::Helm cloudformation extension is already activated.
      Provide execution role arn of AWSQS::Kubernetes::Helm extension.
  KubernetesResourceRoleArn:
    Type: String
    Default: ""
    Description: >-
      Required only if AWSQS::Kubernetes::Resource cloudformation extension is already activated.
      Provide execution role arn of AWSQS::Kubernetes::Resource extension.
  KubernetesClusterRoleName:
    Type: String
    Default: ""
    Description: >-
      Required only if AWSQS::EKS::Cluster cloudformation extension is already activated.
      Provide execution role name of AWSQS::EKS::Cluster extension.
  BucketName:
    Type: String
    MinLength: 1
    Description: >-
      Provide S3 Bucket name where deployment templates are uploaded.
      Upload templates directly into bucket, do not create any folders into bucket to upload templates.
      Please make sure bucket is created in the same region where deployment will happen.
    ConstraintDescription: "Please provide S3 bucket name where deployment templates are uploaded."


Conditions:
  IsCreateNewCluster: !Equals 
    - !Ref CreateNewCluster
    - "Yes"
  IsExtensionsActivated: !Equals
    - !Ref ExtensionActivation
    - "No"
  ActivateExtensions: !And
    - !Condition IsCreateNewCluster
    - !Condition IsExtensionsActivated
Resources:
  HelmExecutionRole:
    Type: AWS::IAM::Role
    Condition: ActivateExtensions
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "resources.cloudformation.amazonaws.com"
                - "cloudformation.amazonaws.com"
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                  - "kms:Decrypt"
                  - "eks:DescribeCluster"
                  - "s3:GetObject"
                  - "sts:AssumeRole"
                  - "sts:GetCallerIdentity"
                  - "iam:PassRole"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeRouteTables"
                  - "ec2:DescribeSecurityGroups"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:DeleteFunction"
                  - "lambda:GetFunction"
                  - "lambda:InvokeFunction"
                  - "lambda:CreateFunction"
                  - "lambda:UpdateFunctionCode"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "cloudformation:ListExports"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "eks:*"
                  - "cloudwatch:ListMetrics"
                  - "cloudwatch:PutMetricData"
                  - "ssm:PutParameter"
                  - "ssm:GetParameter"
                  - "ssm:DeleteParameter"
                Resource: "*"
      # PermissionsBoundary: "arn:aws:iam::975255136272:policy/AWS_Engineering_Admin_Permission_Boundary"

  EksExecutionRole:
    Type: AWS::IAM::Role
    Condition: ActivateExtensions
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [resources.cloudformation.amazonaws.com, cloudformation.amazonaws.com, lambda.amazonaws.com]
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "sts:GetCallerIdentity"
                  - "eks:CreateCluster"
                  - "eks:DeleteCluster"
                  - "eks:DescribeCluster"
                  - "eks:ListTagsForResource"
                  - "eks:UpdateClusterVersion"
                  - "eks:UpdateClusterConfig"
                  - "eks:TagResource"
                  - "eks:UntagResource"
                  - "iam:PassRole"
                  - "sts:AssumeRole"
                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:DeleteFunction"
                  - "lambda:GetFunction"
                  - "lambda:InvokeFunction"
                  - "lambda:CreateFunction"
                  - "lambda:UpdateFunctionCode"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                  - "kms:CreateGrant"
                  - "kms:DescribeKey"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:PutLogEvents"
                  - "cloudwatch:ListMetrics"
                  - "cloudwatch:PutMetricData"
                Resource: "*"
      # PermissionsBoundary: "arn:aws:iam::975255136272:policy/AWS_Engineering_Admin_Permission_Boundary"

  KuernetesExecutionRole:
    Type: AWS::IAM::Role
    Condition: ActivateExtensions
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "resources.cloudformation.amazonaws.com"
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                  - "kms:Decrypt"
                  - "eks:DescribeCluster"
                  - "s3:GetObject"
                  - "sts:AssumeRole"
                  - "sts:GetCallerIdentity"
                  - "iam:PassRole"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeRouteTables"
                  - "ec2:DescribeSecurityGroups"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:DeleteFunction"
                  - "lambda:GetFunction"
                  - "lambda:InvokeFunction"
                  - "lambda:CreateFunction"
                  - "lambda:UpdateFunctionCode"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:PutLogEvents"
                  - "cloudwatch:ListMetrics"
                  - "cloudwatch:PutMetricData"
                  - "ssm:PutParameter"
                  - "ssm:GetParameter"
                  - "ssm:DeleteParameter"
                Resource: "*"
      # PermissionsBoundary: "arn:aws:iam::975255136272:policy/AWS_Engineering_Admin_Permission_Boundary"

  HelmExtensionActivation:
    Type: AWS::CloudFormation::TypeActivation
    Condition: ActivateExtensions
    DependsOn:
      - HelmExecutionRole
    Properties: 
      AutoUpdate: false
      ExecutionRoleArn: !GetAtt HelmExecutionRole.Arn
      TypeName: AWSQS::Kubernetes::Helm
      Type: RESOURCE
      PublisherId: 408988dff9e863704bcc72e7e13f8d645cee8311

  EKSClusterExtensionActivation:
    Type: AWS::CloudFormation::TypeActivation
    Condition: ActivateExtensions
    DependsOn:
      - EksExecutionRole
    Properties: 
      AutoUpdate: false
      ExecutionRoleArn: !GetAtt EksExecutionRole.Arn
      TypeName: AWSQS::EKS::Cluster
      Type: RESOURCE
      PublisherId: 408988dff9e863704bcc72e7e13f8d645cee8311

  KubernetesResourceExtensionActivation:
    Type: AWS::CloudFormation::TypeActivation
    Condition: ActivateExtensions
    DependsOn:
      - KuernetesExecutionRole
    Properties: 
      AutoUpdate: false
      ExecutionRoleArn: !GetAtt KuernetesExecutionRole.Arn
      TypeName: AWSQS::Kubernetes::Resource
      Type: RESOURCE
      PublisherId: 408988dff9e863704bcc72e7e13f8d645cee8311

  EksCluster:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EKSClusterExtensionActivationReady
      - HelmExtensionActivationReady
      - KubernetesResourceExtensionActivationReady
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/cluster_creation.yaml
      Parameters:
        InstanceName: !Ref InstanceName
        CreateNewCluster: !Ref CreateNewCluster
        EKSClusterName: !Ref EKSClusterName
        VirtualNetwork: !Ref VirtualNetwork
        EKSPublicAccessEndpoint: !Ref EKSPublicAccessEndpoint
        EKSSecurityGroupIds: !Ref EKSSecurityGroupIds
        EKSSubnet1Id: !Ref EKSSubnet1Id
        EKSSubnet2Id: !Ref EKSSubnet2Id
        EKSServiceIpv4Cidr: !Ref EKSServiceIpv4Cidr
        EKSRoleArn: !Ref EKSRoleArn
        PrimaryNodeGroupName: !Ref PrimaryNodeGroupName
        PrimaryInstanceType: !Ref PrimaryInstanceType
        MediaNodeGroupName: !Ref MediaNodeGroupName
        MediaInstanceType: !Ref MediaInstanceType
        StorageNodeGroupName: !Ref StorageNodeGroupName
        StorageInstanceType: !Ref StorageInstanceType
        PrimaryDesiredNodeSize: !Ref PrimaryDesiredNodeSize
        MediaDesiredNodeSize: !Ref MediaDesiredNodeSize
        StorageDesiredNodeSize: !Ref StorageDesiredNodeSize
        ControlPlaneNodeGroupName: !Ref ControlPlaneNodeGroupName
        ControlPlaneInstanceType: !Ref ControlPlaneInstanceType
        ControlPlaneDesiredNodeSize: !Ref ControlPlaneDesiredNodeSize
        DataPlaneNodeGroupName: !Ref DataPlaneNodeGroupName
        DataPlaneInstanceType: !Ref DataPlaneInstanceType
        DataPlaneDesiredNodeSize: !Ref DataPlaneDesiredNodeSize
        HelmRoleArn: !If [ IsExtensionsActivated, !GetAtt HelmExecutionRole.Arn , !Ref KubernetesHelmRoleArn ]
        LambdaRoleName: !If [ IsExtensionsActivated, !Ref EksExecutionRole , !Ref KubernetesClusterRoleName]
        EKSClusterAccessRoleArn: !Ref EKSClusterAccessRoleArn
        KuernetesExecutionRoleArn: !If [ IsExtensionsActivated, !GetAtt KuernetesExecutionRole.Arn, !Ref KubernetesResourceRoleArn ] 
        MediaServerReplicas: !Ref MediaServerReplicas
        StorageServerReplicas: !Ref StorageServerReplicas

  EfsDriver:
    Type: AWS::CloudFormation::Stack
    Condition: IsCreateNewCluster
    DependsOn: 
      - EksCluster
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/efs_driver.yaml
      Parameters:
        EKSOpenIdConnectProviderUrl: !GetAtt ["EksCluster", "Outputs.EKSOpenIdConnectProviderUrl"]
        ClusterName: !GetAtt ["EksCluster", "Outputs.ClusterName"]
        ClusterEndpoint: !GetAtt ["EksCluster", "Outputs.ClusterEndpoint"]
  
  LoadBalancerController:
    Type: AWS::CloudFormation::Stack
    Condition: IsCreateNewCluster
    DependsOn: 
      - EfsDriver
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/load_balancer.yaml
      Parameters:
        EKSOpenIdConnectProviderUrl: !GetAtt ["EksCluster", "Outputs.EKSOpenIdConnectProviderUrl"]
        ClusterName: !GetAtt ["EksCluster", "Outputs.ClusterName"]
        ClusterEndpoint: !GetAtt ["EksCluster", "Outputs.ClusterEndpoint"]
  
  EFSVolumeMount:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - LoadBalancerControllerReady
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/efs_volume_mount.yaml
      Parameters:
        ClusterName: !If [ IsCreateNewCluster, !GetAtt ["EksCluster", "Outputs.ClusterName"], !Ref EKSClusterName ]
        SecurityGroup: !Ref EKSSecurityGroupIds
        Subnet2Id: !Ref EKSSubnet2Id
        PrimaryCatalogSize: !Ref PrimaryCatalogSize
        ClusterSecurityGroup: !If [ IsCreateNewCluster, !GetAtt ["EksCluster", "Outputs.ClusterSecurityGroup"], !Ref EKSClusterSecurityGroup ]
        InstanceName: !Ref InstanceName
  
  EBSVolumeMount:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - EFSVolumeMount
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/ebs.yaml
      Parameters:
        EKSOpenIdConnectProviderUrl: !If [ IsCreateNewCluster, !GetAtt ["EksCluster", "Outputs.EKSOpenIdConnectProviderUrl"], "" ]
        ClusterName: !If [ IsCreateNewCluster, !GetAtt ["EksCluster", "Outputs.ClusterName"], !Ref EKSClusterName ]
        ClusterEndpoint: !If [ IsCreateNewCluster, !GetAtt ["EksCluster", "Outputs.ClusterEndpoint"], "" ]
        CreateNewCluster: !Ref CreateNewCluster

  HelmInstallation:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - EBSVolumeMount
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/helm.yaml
      Parameters:
        ClusterName: !If [ IsCreateNewCluster, !GetAtt ["EksCluster", "Outputs.ClusterName"], !Ref EKSClusterName ]
        SecurityGroupId: !Ref EKSSecurityGroupIds
        Subnet1Id: !Ref EKSSubnet1Id
        Subnet2Id: !Ref EKSSubnet2Id
        LicenseKey: !Ref LicenseKey
        PrimaryHostNameMapping: !Ref PrimaryHostNameMapping
        MediaHostNameMapping: !Join [",", [!Ref MediaHostNameMapping, "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test"]]
        PrimaryUsername: !Ref PrimaryUsername
        PrimaryPassword: !Ref PrimaryPassword
        HostMasterKeyID: !Ref HostMasterKeyID
        HostMasterKeyPassphrase: !Ref HostMasterKeyPassphrase
        KeyProtectionKeyID: !Ref KeyProtectionKeyID
        KeyProtectionKeyPassphrase: !Ref KeyProtectionKeyPassphrase
        PrimaryCatalogSize: !Ref PrimaryCatalogSize
        PrimaryLogsSize: !Ref PrimaryLogsSize
        PrimaryDataSize: !Ref PrimaryDataSize
        MediaDataSize: !Ref MediaDataSize
        MediaLogsSize: !Ref MediaLogsSize
        MediaServerReplicas: !Ref MediaServerReplicas
        StorageServerReplicas: !Ref StorageServerReplicas
        KMSKeyGroup: !Ref KMSKeyGroup
        SubnetForLoadBalancer: !Ref SubnetForLoadBalancer
        SnapshotServerUsername: !Ref SnapshotServerUsername
        SnapshotServerPassword: !Ref SnapshotServerPassword
        SnapshotServerLogsSize: !Ref SnapshotServerLogsSize
        SnapshotServerDataSize: !Ref SnapshotServerDataSize
        SnapshotServerHostNameMapping: !Ref SnapshotServerHostNameMapping
        ControlPlaneNodeGroupName: !Ref ControlPlaneNodeGroupName
        DataPlaneNodeGroupName: !Ref DataPlaneNodeGroupName
        StorageCatalogSizeInGi: !Ref StorageCatalogSizeInGi
        StorageLogsSizeInGi: !Ref StorageLogsSizeInGi
        DataSizeInGi: !Ref DataSizeInGi
        KMSKeyPassphrase: !Ref KMSKeyPassphrase
        StorageServerUsername: !Ref StorageServerUsername
        StorageServerPassword: !Ref StorageServerPassword
        StorageHostNameMapping: !Join [",", [!Ref StorageHostNameMapping, "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test", "ip_test:fqdn_test"]]
        InstanceName: !Ref InstanceName
        PrimaryNodeGroupName: !Ref PrimaryNodeGroupName
        MediaNodeGroupName: !Ref MediaNodeGroupName
        StorageNodeGroupName: !Ref StorageNodeGroupName
        KMSKeyName: !Ref KMSKeyName

  LoadBalancerControllerReady:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      IsReadyLoadBalancerController: !If [ IsCreateNewCluster, !Ref LoadBalancerController, !Ref EksCluster ]

  EKSClusterExtensionActivationReady:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      IsReadyEKSClusterExtension: !If [ IsExtensionsActivated, !Ref EKSClusterExtensionActivation, "" ]

  HelmExtensionActivationReady:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      IsReadyHelmExtension: !If [ IsExtensionsActivated, !Ref HelmExtensionActivation, "" ]

  KubernetesResourceExtensionActivationReady:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      IsReadyKubernetesResourceExtension: !If [ IsExtensionsActivated, !Ref KubernetesResourceExtensionActivation, "" ]

Rules:
  SubnetsInVPC:
    Assertions:
    - Assert:
        Fn::EachMemberIn:
        - Fn::ValueOfAll:
          - AWS::EC2::Subnet::Id
          - VpcId
        - Fn::RefAll: AWS::EC2::VPC::Id
      AssertDescription: Subnet must be a part of the selected VPC
  ConfirmPasswordCheck:
    Assertions:
      - Assert:
          Fn::Equals:
          - Ref: PrimaryPassword
          - Ref: PrimaryConfirmPassword
        AssertDescription: Passwords must be the same
      - Assert:
          Fn::Equals:
          - Ref: HostMasterKeyPassphrase
          - Ref: ConfirmHostMasterKeyPassphrase
        AssertDescription: Passphrase must be the same
      - Assert:
          Fn::Equals:
          - Ref: KeyProtectionKeyPassphrase
          - Ref: ConfirmKeyProtectionKeyPassphrase
        AssertDescription: Passphrase must be the same
      - Assert:
          Fn::Equals:
          - Ref: StorageServerPassword
          - Ref: StorageServerConfirmPassword
        AssertDescription: Passwords must be the same
      - Assert:
          Fn::Equals:
          - Ref: KMSKeyPassphrase
          - Ref: ConfirmKMSKeyPassphrase
        AssertDescription: Passphrase must be the same
      - Assert:
          Fn::Equals:
          - Ref: SnapshotServerPassword
          - Ref: SnapshotServerConfirmPassword
        AssertDescription: Passwords must be the same
  
